/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package _/home/ruenzuo/GitHub/UnsafePointer/ruby/libHana */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 4 "DebugServer.go"


typedef unsigned int* (*GlobalRegistersCallbackType)();
unsigned int* callGlobalRegistersCallback(GlobalRegistersCallbackType callback);
typedef unsigned char* (*MemoryReadCallbackType)(unsigned int address, unsigned int length);
unsigned char* callMemoryReadCallback(MemoryReadCallbackType callback, unsigned int address, unsigned int length);
typedef void (*AddBreakpointCallbackType)(unsigned int address);
void callAddBreakpointCallback(AddBreakpointCallbackType callback, unsigned int address);
typedef void (*ContinueCallbackType)();
void callContinueCallback(ContinueCallbackType callback);
typedef void (*AddLoadWatchpointCallbackType)(unsigned int address);
void callAddLoadWatchpointCallback(AddLoadWatchpointCallbackType callback, unsigned int address);
typedef void (*AddStoreWatchpointCallbackType)(unsigned int address);
void callAddStoreWatchpointCallback(AddStoreWatchpointCallbackType callback, unsigned int address);
typedef void (*RemoveBreakpointCallbackType)(unsigned int address);
void callRemoveBreakpointCallback(RemoveBreakpointCallbackType callback, unsigned int address);
typedef void (*RemoveLoadWatchpointCallbackType)(unsigned int address);
void callRemoveLoadWatchpointCallback(RemoveLoadWatchpointCallbackType callback, unsigned int address);
typedef void (*RemoveStoreWatchpointCallbackType)(unsigned int address);
void callRemoveStoreWatchpointCallback(RemoveStoreWatchpointCallbackType callback, unsigned int address);

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


extern void SetGlobalRegistersCallback(GlobalRegistersCallbackType p0);

extern void SetReadMemoryCallback(MemoryReadCallbackType p0);

extern void SetAddBreakpointCallback(AddBreakpointCallbackType p0);

extern void SetContinueCallback(ContinueCallbackType p0);

extern void SetAddLoadWatchpointCallback(AddLoadWatchpointCallbackType p0);

extern void SetAddStoreWatchpointCallback(AddStoreWatchpointCallbackType p0);

extern void SetRemoveBreakpointCallback(RemoveBreakpointCallbackType p0);

extern void SetRemoveLoadWatchpointCallback(RemoveLoadWatchpointCallbackType p0);

extern void SetRemoveStoreWatchpointCallback(RemoveStoreWatchpointCallbackType p0);

extern void NotifyStopped();

extern void StartDebugServer(GoUint p0);

#ifdef __cplusplus
}
#endif
